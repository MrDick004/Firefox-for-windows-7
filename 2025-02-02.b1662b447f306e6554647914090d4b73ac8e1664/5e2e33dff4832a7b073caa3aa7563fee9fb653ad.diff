

diff --git a/widget/windows/AudioSession.cpp b/widget/windows/AudioSession.cpp
index c14278f56c630..a38e2a83f6de5 100644
--- a/widget/windows/AudioSession.cpp
+++ b/widget/windows/AudioSession.cpp
@@ -255,14 +255,19 @@ void AudioSession::StopInternal(const MutexAutoLock& aProofOfLock,
   // IAudioSessionControl on the main thread instead.  In order to do that, we
   // need to marshall the object to the main thread's apartment with an
   // AgileReference.
-  mscom::AgileReference agileAsc(mAudioSessionControl);
+  const IID IID_IAudioSessionControl = __uuidof(IAudioSessionControl);
+  auto agileAsc = MakeUnique<mozilla::mscom::AgileReference>(
+      IID_IAudioSessionControl, mAudioSessionControl);
   mAudioSessionControl = nullptr;
   NS_DispatchToMainThread(NS_NewRunnableFunction(
-      "FreeAudioSession",
-      [agileAsc = std::move(agileAsc), shouldRestart]() mutable {
+      "FreeAudioSession", [agileAsc = std::move(agileAsc),
+                           IID_IAudioSessionControl, shouldRestart] {
+        RefPtr<IAudioSessionControl> toDelete;
+        [[maybe_unused]] HRESULT hr = agileAsc->Resolve(
+            IID_IAudioSessionControl, getter_AddRefs(toDelete));
+        MOZ_ASSERT(SUCCEEDED(hr));
         // Now release the AgileReference which holds our only reference to the
         // IAudioSessionControl, then maybe restart.
-        agileAsc = nullptr;
         if (shouldRestart) {
           NS_DispatchBackgroundTask(
               NS_NewCancelableRunnableFunction("RestartAudioSession", [] {
