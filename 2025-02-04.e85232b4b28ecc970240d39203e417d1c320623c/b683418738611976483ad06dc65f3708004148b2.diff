diff --git a/widget/nsIWidget.h b/widget/nsIWidget.h
index 5304f760ab6c..81e952a8c653 100644
--- a/widget/nsIWidget.h
+++ b/widget/nsIWidget.h
@@ -784,6 +784,10 @@ class nsIWidget : public nsISupports {
   virtual void Resize(double aX, double aY, double aWidth, double aHeight,
                       bool aRepaint) = 0;
 
+  virtual mozilla::Maybe<bool> IsResizingNativeWidget() {
+    return mozilla::Nothing();
+  }
+
   /**
    * Resize the widget so that the inner client area has the given size.
    *
diff --git a/widget/windows/nsWindow.cpp b/widget/windows/nsWindow.cpp
index bc6a2af3a172..2c6fccccea51 100644
--- a/widget/windows/nsWindow.cpp
+++ b/widget/windows/nsWindow.cpp
@@ -2050,6 +2050,13 @@ void nsWindow::Resize(double aX, double aY, double aWidth, double aHeight,
   if (aRepaint) Invalidate();
 }
 
+mozilla::Maybe<bool> nsWindow::IsResizingNativeWidget() {
+  if (mResizeState == RESIZING) {
+    return Some(true);
+  }
+  return Some(false);
+}
+
 /**************************************************************
  *
  * SECTION: Window state.
diff --git a/widget/windows/nsWindow.h b/widget/windows/nsWindow.h
index 28c07817bd43..3a521fb97832 100644
--- a/widget/windows/nsWindow.h
+++ b/widget/windows/nsWindow.h
@@ -175,6 +175,7 @@ class nsWindow final : public nsBaseWidget {
   void Resize(double aWidth, double aHeight, bool aRepaint) override;
   void Resize(double aX, double aY, double aWidth, double aHeight,
               bool aRepaint) override;
+  mozilla::Maybe<bool> IsResizingNativeWidget() override;
   void SetSizeMode(nsSizeMode aMode) override;
   nsSizeMode SizeMode() override;
   void GetWorkspaceID(nsAString& workspaceID) override;
